{
  "id": "6b70ce8d-ce56-430e-abf9-ba34e508825f",
  "prefix": "DriveUsageByDatabaseFiles",
  "description": "To Check the SQL Database Files w.r.to Drive",
  "body": "/* =================================================================================================\r\n-- Author\t\t: SaiKarthik\r\n-- Create Date\t: 23-03-2020\r\n-- Script\t\t: Disk Drives Space Check with SQL DB Files using DMV - Basic.sql\r\n-- Description\t: To Find the Disk Utilization w.r.to the SQL Data and Log Files\r\n================================================================================================= */\r\nDECLARE @DatabaseFiles TABLE\r\n(\r\n    DBid INT,\r\n    DBname sysname,\r\n    LogicalFileName sysname,\r\n    FileType NVARCHAR(128),\r\n    FileGroupName NVARCHAR(128),\r\n    PhysicalFileName NVARCHAR(2048),\r\n    FileSize FLOAT,\r\n    SpaceUsed FLOAT,\r\n    SpaceFree FLOAT,\r\n    MaxSize INT,\r\n    Growth INT,\r\n    is_percent_growth BIT\r\n);\r\n\r\nINSERT INTO @DatabaseFiles\r\nEXEC sys.sp_MSforeachdb 'use [?]; \r\nSELECT DB_ID() AS \"DBid\",\r\n\t   DB_NAME() AS \"DBname\",\r\n\t   DF.name AS \"LogicalFileName\",\r\n\t   DF.type_desc AS \"FileType\",\r\n\t   FG.name AS \"FileGroupName\",\r\n\t   DF.physical_name AS \"PhysicalFileName\",\r\n\t   DF.size AS \"FileSize\",\r\n\t   CAST(FILEPROPERTY(DF.name, ''SpaceUsed'') AS INT) AS \"SpaceUsed\",\r\n\t   DF.size - CAST(FILEPROPERTY(DF.name, ''SpaceUsed'') AS INT) AS \"SpaceFree\",\r\n\t   DF.max_size AS \"MaxSize\",\r\n\t   DF.growth AS \"Growth\",\r\n\t   DF.is_percent_growth AS \"is_percent_growth\"\r\nFROM sys.database_files AS DF\r\nLEFT OUTER JOIN sys.filegroups AS FG ON FG.data_space_id = DF.data_space_id\r\nWHERE DF.type IN ( 0, 1 );';\r\n--\r\n;WITH _CTE_DriveSpace\r\nAS (\r\n    SELECT DISTINCT\r\n           volume_mount_point AS \"Drive\",\r\n           file_system_type AS \"FileSystemType\",\r\n           logical_volume_name AS \"LogicalDriveName\",\r\n           CASE\r\n               WHEN CONVERT(DECIMAL(18, 2), CAST(total_bytes AS FLOAT) / 1024 /*KB*/ / 1024 /*MB*/ / 1024 /*GB*/) > 1000 /*GB*/\r\n                   THEN CAST(CAST(ROUND(CAST(total_bytes AS FLOAT) / 1024 /*KB*/ / 1024 /*MB*/ / 1024 /*GB*/ / 1024 /*TB*/, 2, 1) AS DECIMAL(18, 2)) AS VARCHAR(32)) + ' TB'\r\n               ELSE CAST(CAST(ROUND(CAST(total_bytes AS FLOAT) / 1024 /*KB*/ / 1024 /*MB*/ / 1024 /*GB*/, 2, 1) AS DECIMAL(18, 2)) AS VARCHAR(32)) + ' GB'\r\n           END AS \"TotalSize\",\r\n           CASE\r\n               WHEN CONVERT(DECIMAL(18, 2), CAST(available_bytes AS FLOAT) / 1024 /*KB*/ / 1024 /*MB*/ / 1024 /*GB*/) > 1000 /*GB*/\r\n                   THEN CAST(CAST(ROUND(CAST(available_bytes AS FLOAT) / 1024 /*KB*/ / 1024 /*MB*/ / 1024 /*GB*/ / 1024 /*TB*/, 2, 1) AS DECIMAL(18, 2)) AS VARCHAR(32)) + ' TB'\r\n               ELSE CAST(CAST(ROUND(CAST(available_bytes AS FLOAT) / 1024 /*KB*/ / 1024 /*MB*/ / 1024 /*GB*/, 2, 1) AS DECIMAL(18, 2)) AS VARCHAR(32)) + ' GB'\r\n           END AS \"AvailableSize\",\r\n           CAST(ROUND((CAST(available_bytes AS FLOAT) / CAST(total_bytes AS FLOAT) * 100), 2, 1) AS DECIMAL(18, 2)) AS \"FreeSpace%\"\r\n    FROM sys.master_files\r\n        CROSS APPLY sys.dm_os_volume_stats(database_id, file_id)\r\n    )\r\nSELECT CDS.[Drive],\r\n       CDS.[TotalSize] AS \"TotalDriveSize\",\r\n       CDS.[AvailableSize] AS \"DriveFreeSpace\",\r\n       CDS.[FreeSpace%],\r\n       '|' AS \" \",\r\n       DF.DBname AS \"DatabaseName\",\r\n       DF.LogicalFileName AS \"LogicalFileName\",\r\n       CASE DF.FileType \r\n           WHEN 'LOG' THEN DF.FileType + ' | ' + DBs.log_reuse_wait_desc COLLATE DATABASE_DEFAULT \r\n\t\t   ELSE df.FileType \r\n       END AS \"FileType | LogWait\",\r\n       DF.FileGroupName AS \"FileGroupName\",\r\n       DF.PhysicalFileName AS \"FilePhysicalLocation\",\r\n       DBs.recovery_model_desc AS \"RecoveryModel\",\r\n       CAST(DF.FileSize * 8.0 /*KB*/ / 1024.0 /*MB*/ AS DECIMAL(10,2)) AS \"TotalFileSize(MB)\",\r\n       CAST(DF.SpaceUsed * 8.0 /*KB*/ / 1024.0 /*MB*/ AS DECIMAL(10,2)) AS \"UsedFileSpace(MB)\",\r\n       CAST(DF.SpaceFree * 8.0 /*KB*/ / 1024.0 /*MB*/ AS DECIMAL(10,2)) AS \"FreeFileSpace(MB)\",\r\n       CASE DF.is_percent_growth\r\n           WHEN 1 THEN CONVERT(NVARCHAR(15), DF.Growth) + N'%'\r\n           ELSE CONVERT(NVARCHAR(15), (DF.Growth * 8 /*KB*/ / 1024 /*MB*/)) + N' MB'\r\n       END AS \"FileGrowth\",\r\n       CASE DF.MaxSize\r\n           WHEN 0 THEN 'Limited'\r\n           WHEN - 1 THEN 'UnLimited'\r\n           WHEN 268435456 THEN 'UpTo 2 TB'\r\n           ELSE 'Limited (' + CONVERT(VARCHAR(15), DF.MaxSize * 8 /*KB*/ / 1024 /*MB*/) + ' MB)'\r\n       END AS \"RestrictedGrowth\"\r\nFROM _CTE_DriveSpace AS CDS\r\nINNER JOIN @DatabaseFiles AS DF ON RTRIM(CDS.[Drive]) = LEFT(DF.PhysicalFileName, 3)\r\nINNER JOIN sys.databases AS DBs ON DF.DBid = DBs.database_id\r\nWHERE 1=1 \r\n    --AND DB_NAME(DF.DBid) = 'master'\r\nORDER BY CDS.[Drive],\r\n         DF.DBname ASC ;"
}